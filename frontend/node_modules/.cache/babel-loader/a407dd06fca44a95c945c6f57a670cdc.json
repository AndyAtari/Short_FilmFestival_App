{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/andy_atari/short-film-festival-app/frontend/src/containers/QandAContainer.js\";\nimport React, { Component } from \"react\";\nimport QuestionAsked from \"../components/QuestionAsked\";\nimport Questions from \"../components/Questions\";\nimport { connect } from \"react-redux\";\n\nclass QandAContainer extends Component {\n  constructor(...args) {\n    super(...args);\n\n    this.topQuestion = () => {\n      const {\n        question\n      } = this.props;\n      console.log(question);\n    };\n  }\n\n  componentDidMount() {\n    fetch(\"http://localhost:3000/questions\").then(resp => resp.json()).then(question => {\n      this.props.setQuestions(question);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"q-a\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Filmmaker Q&A\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.topQuestion()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(QuestionAsked, {\n        addQuestion: this.props.addQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Questions, {\n        questions: this.props.questions,\n        deleteQuestion: this.props.deleteQuestion\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nconst mapStateToProps = state => ({\n  questions: state.questions\n});\n\nconst mapDispatchToProps = dispatch => ({\n  addQuestion: text => dispatch({\n    type: \"ADD_QUESTION\",\n    text\n  }),\n  deleteQuestion: id => dispatch({\n    type: \"DELETE_QUESTION\",\n    id\n  }),\n  setQuestions: question => dispatch({\n    type: \"SET_QUESTIONS\",\n    payload: {\n      question: question\n    }\n  })\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QandAContainer);","map":{"version":3,"sources":["/home/andy_atari/short-film-festival-app/frontend/src/containers/QandAContainer.js"],"names":["React","Component","QuestionAsked","Questions","connect","QandAContainer","topQuestion","question","props","console","log","componentDidMount","fetch","then","resp","json","setQuestions","render","addQuestion","questions","deleteQuestion","mapStateToProps","state","mapDispatchToProps","dispatch","text","type","id","payload"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,aAAP,MAA0B,6BAA1B;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAEA,MAAMC,cAAN,SAA6BJ,SAA7B,CAAuC;AAAA;AAAA;;AAAA,SASrCK,WATqC,GASvB,MAAM;AAClB,YAAM;AAAEC,QAAAA;AAAF,UAAe,KAAKC,KAA1B;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACD,KAZoC;AAAA;;AACrCI,EAAAA,iBAAiB,GAAG;AAClBC,IAAAA,KAAK,CAAC,iCAAD,CAAL,CACGC,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESN,QAAD,IAAc;AAClB,WAAKC,KAAL,CAAWQ,YAAX,CAAwBT,QAAxB;AACD,KAJH;AAKD;;AAODU,EAAAA,MAAM,GAAG;AACP,wBACE;AAAK,MAAA,SAAS,EAAC,KAAf;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAM,KAAKX,WAAL;AAAN;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,aAAD;AAAe,QAAA,WAAW,EAAE,KAAKE,KAAL,CAAWU;AAAvC;AAAA;AAAA;AAAA;AAAA,cAHF,eAIE,QAAC,SAAD;AACE,QAAA,SAAS,EAAE,KAAKV,KAAL,CAAWW,SADxB;AAEE,QAAA,cAAc,EAAE,KAAKX,KAAL,CAAWY;AAF7B;AAAA;AAAA;AAAA;AAAA,cAJF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AA1BoC;;AA6BvC,MAAMC,eAAe,GAAIC,KAAD,KAAY;AAClCH,EAAAA,SAAS,EAAEG,KAAK,CAACH;AADiB,CAAZ,CAAxB;;AAIA,MAAMI,kBAAkB,GAAIC,QAAD,KAAe;AACxCN,EAAAA,WAAW,EAAGO,IAAD,IAAUD,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,cAAR;AAAwBD,IAAAA;AAAxB,GAAD,CADS;AAExCL,EAAAA,cAAc,EAAGO,EAAD,IAAQH,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,iBAAR;AAA2BC,IAAAA;AAA3B,GAAD,CAFQ;AAGxCX,EAAAA,YAAY,EAAGT,QAAD,IACZiB,QAAQ,CAAC;AAAEE,IAAAA,IAAI,EAAE,eAAR;AAAyBE,IAAAA,OAAO,EAAE;AAAErB,MAAAA,QAAQ,EAAEA;AAAZ;AAAlC,GAAD;AAJ8B,CAAf,CAA3B;;AAOA,eAAeH,OAAO,CAACiB,eAAD,EAAkBE,kBAAlB,CAAP,CAA6ClB,cAA7C,CAAf","sourcesContent":["import React, { Component } from \"react\";\nimport QuestionAsked from \"../components/QuestionAsked\";\nimport Questions from \"../components/Questions\";\nimport { connect } from \"react-redux\";\n\nclass QandAContainer extends Component {\n  componentDidMount() {\n    fetch(\"http://localhost:3000/questions\")\n      .then((resp) => resp.json())\n      .then((question) => {\n        this.props.setQuestions(question);\n      });\n  }\n\n  topQuestion = () => {\n    const { question } = this.props;\n    console.log(question);\n  };\n\n  render() {\n    return (\n      <div className=\"q-a\">\n        <h1>Filmmaker Q&A</h1>\n        <div>{this.topQuestion()}</div>\n        <QuestionAsked addQuestion={this.props.addQuestion} />\n        <Questions\n          questions={this.props.questions}\n          deleteQuestion={this.props.deleteQuestion}\n        />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  questions: state.questions,\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  addQuestion: (text) => dispatch({ type: \"ADD_QUESTION\", text }),\n  deleteQuestion: (id) => dispatch({ type: \"DELETE_QUESTION\", id }),\n  setQuestions: (question) =>\n    dispatch({ type: \"SET_QUESTIONS\", payload: { question: question } }),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(QandAContainer);\n"]},"metadata":{},"sourceType":"module"}