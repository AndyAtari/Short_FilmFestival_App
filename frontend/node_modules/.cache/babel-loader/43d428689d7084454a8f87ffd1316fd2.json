{"ast":null,"code":"export const uploadVideo = uploads => {\n  return {\n    type: \"UPLOAD_VIDEO\",\n    uploads: Object.assign({}, uploads)\n  };\n};\nexport const postQuestion = question => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/movies\", {\n      method: \"POST\",\n      headers: {\n        \"Content-type\": \"application/json\"\n      },\n      body: JSON.stringify(question)\n    }).then(resp => resp.json()).then(question => {\n      // dispatch({ type: \"ADD_QUESTION\", text })\n      console.log(question);\n    });\n  };\n};\nexport const getVideos = () => {\n  return dispatch => {\n    fetch(\"http://localhost:3000/movies\").then(resp => resp.json()).then(videos => {\n      dispatch({\n        type: \"SET_VIDEOS\",\n        payload: {\n          videos: videos\n        }\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/home/andy_atari/short-film-festival-app/frontend/src/redux/actionCreator.js"],"names":["uploadVideo","uploads","type","Object","assign","postQuestion","question","dispatch","fetch","method","headers","body","JSON","stringify","then","resp","json","console","log","getVideos","videos","payload"],"mappings":"AAAA,OAAO,MAAMA,WAAW,GAAIC,OAAD,IAAa;AACtC,SAAO;AACLC,IAAAA,IAAI,EAAE,cADD;AAELD,IAAAA,OAAO,EAAEE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,OAAlB;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,MAAMI,YAAY,GAAIC,QAAD,IAAc;AACxC,SAAQC,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,8BAAD,EAAiC;AACpCC,MAAAA,MAAM,EAAE,MAD4B;AAEpCC,MAAAA,OAAO,EAAE;AAAE,wBAAgB;AAAlB,OAF2B;AAGpCC,MAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeP,QAAf;AAH8B,KAAjC,CAAL,CAKGQ,IALH,CAKSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EALlB,EAMGF,IANH,CAMSR,QAAD,IAAc;AAClB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAYZ,QAAZ;AACD,KATH;AAUD,GAXD;AAYD,CAbM;AAeP,OAAO,MAAMa,SAAS,GAAG,MAAM;AAC7B,SAAQZ,QAAD,IAAc;AACnBC,IAAAA,KAAK,CAAC,8BAAD,CAAL,CACGM,IADH,CACSC,IAAD,IAAUA,IAAI,CAACC,IAAL,EADlB,EAEGF,IAFH,CAESM,MAAD,IAAY;AAChBb,MAAAA,QAAQ,CAAC;AACPL,QAAAA,IAAI,EAAE,YADC;AAEPmB,QAAAA,OAAO,EAAE;AACPD,UAAAA,MAAM,EAAEA;AADD;AAFF,OAAD,CAAR;AAMD,KATH;AAUD,GAXD;AAYD,CAbM","sourcesContent":["export const uploadVideo = (uploads) => {\n  return {\n    type: \"UPLOAD_VIDEO\",\n    uploads: Object.assign({}, uploads),\n  };\n};\n\nexport const postQuestion = (question) => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/movies\", {\n      method: \"POST\",\n      headers: { \"Content-type\": \"application/json\" },\n      body: JSON.stringify(question),\n    })\n      .then((resp) => resp.json())\n      .then((question) => {\n        // dispatch({ type: \"ADD_QUESTION\", text })\n        console.log(question);\n      });\n  };\n};\n\nexport const getVideos = () => {\n  return (dispatch) => {\n    fetch(\"http://localhost:3000/movies\")\n      .then((resp) => resp.json())\n      .then((videos) => {\n        dispatch({\n          type: \"SET_VIDEOS\",\n          payload: {\n            videos: videos,\n          },\n        });\n      });\n  };\n};\n"]},"metadata":{},"sourceType":"module"}